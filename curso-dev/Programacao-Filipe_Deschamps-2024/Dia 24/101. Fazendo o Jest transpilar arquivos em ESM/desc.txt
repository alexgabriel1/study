√â a partir dessa Pista Lenta que voc√™ vai entender o **afastamento** que d√° para ter da **Muralha de Neg√≥cio** que √©, no final das contas, ter o endpoint `/migrations` us√°vel por quem quer consultar ou rodar as Migrations do sistema por essa interface program√°tica. Eu digo isso, porque a gente vai passar por algumas coisas da **Muralha T√©cnica** que n√£o s√£o t√£o sem√¢nticas, nem divertidas, pelo menos quando comparado a onde a gente quer chegar. Uma destas coisas √© fazer o `Jest` conseguir ler e utilizar m√≥dulos `ESM`, que √© o que iremos resolver dentro desta aula ü§ù

### Desafios para pr√≥xima aula

Ao final eu proponho dois desafios:

* **Desafio N√≠vel 1:** provar atrav√©s do c√≥digo que o processo do `Jest` de fato est√° rodando no ambiente `test` e tamb√©m provar que as credenciais do Banco de Dados n√£o est√£o sendo injetadas no `process.env`.
* **Desafio N√≠vel 2:** fazer o `.env.development` ser carregado dentro do processo do `Jest`.


### Como publicar as respostas sem dar spoiler?

Dentro do corpo da sua resposta, voc√™ pode pode utilizar a tag especial `<details>`, por exemplo:

    <details>
      <summary>Spoiler</summary>

      Esta parte estar√° escondida por padr√£o at√© que voc√™ clique em `Spoiler`.

      E aqui dentro voc√™ poder√° colocar o que quiser, at√© outro c√≥digo, por exemplo:

      ```js
      console.log('funcionou!');
      ```
    </details>

O resultado do c√≥digo acima √© isto aqui:

<details>
  <summary>Spoiler</summary>

  Esta parte estar√° escondida por padr√£o at√© que voc√™ clique em `Spoiler`.

  E aqui dentro voc√™ poder√° colocar o que quiser, at√© outro c√≥digo, por exemplo:

  ```js
  console.log('funcionou!');
  ```
</details>